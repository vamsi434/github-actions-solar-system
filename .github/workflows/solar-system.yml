name: Solar System Workflow

on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'
env:
   MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
   MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}  
   MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
jobs:
    unit-testing:
        name: Unit Testing
        strategy:
          matrix:
            nodejs_version: [18,19]
            operating_system: [ubuntu-latest]
            exclude:
              - nodejs_version: 18
                operating_system: macos
        runs-on: ${{ matrix.operating_system}}
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup NodeJS Version
          uses: actions/setup-node@v3
          with:
            node-version: ${{matrix.nodejs_version}}
        - name: cache NPM dependencies 
          uses: actions/cache@v3
          with:
            path: node_modules
            key: ${{ runner.os }}-node-modules-${{hashFiles('package-lock.json')}}
    
        - name: Install Dependencies
          run: npm install
    
        - name: Unit Testing
          id: nodejs-unit-testing-step
          run: npm test
          
        - name: Archive Test Result
          if: always()
          uses: actions/upload-artifact@v4
          with:
            name: Mocha-Test-Result
            path: test-results.xml
    docker:
          name: containerization
          runs-on: ubuntu-latest
          steps:
             - name: Checkout repo 
               uses: actions/checkout@v4 
             - name: dockerhub login 
               uses: docker/login-action@v2.2.0
               with:
                 username: ${{ vars.DOCKER_USERNAME }} 
                 password: ${{ secrets.DOCKER_PASSWORD }}
             - name: docker build for testing 
               uses: docker/build-push-action@v4 
               with: 
                   context: .
                   push: false 
                   tags: ${{ vars.DOCKER_USERNAME }}/solar-system:${{github.sha}}

             - name: docker image testing 
               run: |
                 docker images 
                 docker run --name solar-system-app -d \
                 -p 3000:3000 \
                 -e MONGO_URI=$MONGO_USERNAME \
                 -e MONGO_USERNAME=$MONGO_USERNAME \
                 -e MONGO_PASSWORD=$MONGO_PASSWORD \
                 ${{ vars.DOCKER_USERNAME }}/solar-system:${{ github.sha }} 
                 export IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' solar-system-app)
                 echo $IP 

                 echo testing Image URL using wget 
                 wget -q -o - $IP:3000/live | grep live


       